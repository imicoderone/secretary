// Generated by Dagger (https://dagger.dev).
package net.synapticweb.callrecorder.di;

import android.content.Context;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import net.synapticweb.callrecorder.data.Repository;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositoryModule_ProvideRepositoryFactory implements Factory<Repository> {
  private final RepositoryModule module;

  private final Provider<Context> contextProvider;

  public RepositoryModule_ProvideRepositoryFactory(RepositoryModule module,
      Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public Repository get() {
    return provideRepository(module, contextProvider.get());
  }

  public static RepositoryModule_ProvideRepositoryFactory create(RepositoryModule module,
      Provider<Context> contextProvider) {
    return new RepositoryModule_ProvideRepositoryFactory(module, contextProvider);
  }

  public static Repository provideRepository(RepositoryModule instance, Context context) {
    return Preconditions.checkNotNull(instance.provideRepository(context), "Cannot return null from a non-@Nullable @Provides method");
  }
}
